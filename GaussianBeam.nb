(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     93817,       2038]
NotebookOptionsPosition[     46741,       1165]
NotebookOutlinePosition[     93435,       2034]
CellTagsIndexPosition[     93392,       2031]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "Constants", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "   ", "=", "   ", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\"\<PhysicalConstant\>\"", ",", "\"\<SpeedOfLight\>\""}], 
      "]"}], "[", "\"\<Value\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "   ", "=", "   ", 
   RowBox[{
    RowBox[{"QuantityMagnitude", "[", 
     RowBox[{"\"\<ElectronCharge\>\"", ",", "\"\<SIBase\>\""}], "]"}], "//", 
    "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["m", "e"], " ", "=", "   ", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\"\<PhysicalConstant\>\"", ",", "\"\<ElectronMass\>\""}], 
      "]"}], "[", "\"\<Value\>\"", "]"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permittivity", " ", "=", "   ", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{"\"\<VacuumPermittivity\>\"", ",", "\"\<SIBase\>\""}], "]"}], "//",
      "N"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Wavelenght", " ", "of", " ", "light", " ", "creating", " ", "trapping", 
    " ", "potential"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LambdaL", " ", "=", " ", 
    RowBox[{"1064", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "9"}]]}]}], ";", "  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"[", "m", "]"}], ",", " ", 
     RowBox[{"laser", " ", "wavelength"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"LambdaT", " ", "=", "   ", 
    RowBox[{"461", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "9"}]]}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"[", "m", "]"}], ",", " ", 
    RowBox[{"atomic", " ", "transition", " ", "wavelenght"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Parameters", " ", "for", " ", "equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["w", "0"], " ", "=", 
    RowBox[{"60.0", "*", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]], "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], ";"}], "         ", 
  RowBox[{"(*", 
   RowBox[{"m", ",", " ", 
    RowBox[{
    "this", " ", "is", " ", "defined", " ", "at", " ", "the", " ", 
     "e_raduouse", " ", "not", " ", 
     RowBox[{"e", "^", "2"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"power", " ", "=", " ", "10.0"}], ";", 
   "                                 ", 
   RowBox[{"(*", "W", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"87", " ", "1.66054", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "27"}]]}]}], ";", "             ", 
   RowBox[{"(*", "Kg", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[Omega]", "   ", "=", "  ", 
    RowBox[{"N", "[", " ", 
     RowBox[{"c", " ", "/", " ", "LambdaL"}], "]"}]}], ";", "          ", 
   RowBox[{"(*", "Hz", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["\[Omega]", "0"], " ", "=", "  ", 
    RowBox[{"N", "[", " ", 
     RowBox[{"c", " ", "/", " ", "LambdaT"}], " ", "]"}]}], ";"}], 
  "         ", 
  RowBox[{"(*", "Hz", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Rayleigh", " ", "range"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zR", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "\[Pi]", " ", 
        SuperscriptBox[
         SubscriptBox["w", "0"], "2"]}], "LambdaL"], ",", "15"}], "]"}], 
    "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<The ratio 2\!\(\*FractionBox[SuperscriptBox[\(zR\), \(2\)], \
SuperscriptBox[SubscriptBox[\(w\), \(0\)], \(2\)]]\) = \>\"", ",", 
     RowBox[{"2", 
      FractionBox[
       SuperscriptBox["zR", "2"], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["w", "0"], "2"], " "}]]}]}], " ", "]"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Spot", " ", "size", " ", "of", " ", "the", " ", "beam"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"w", "[", "z_", "]"}], " ", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "  ", 
     SubscriptBox["w", "0"], " ", "*", " ", 
     RowBox[{"Sqrt", "[", "  ", 
      RowBox[{"1", " ", "+", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["z", "zR"], ")"}], "2"]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calculating", " ", "Peak", " ", "intensity", " ", "from", " ", "peak", 
    " ", "power"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["I", "0"], " ", "=", " ", 
    FractionBox["power", 
     RowBox[{"\[Pi]", " ", 
      SuperscriptBox[
       SubscriptBox["w", "0"], "2"]}]]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Intensity", " ", "as", " ", "a", " ", "function", " ", "of", " ", 
    "position", " ", "for", " ", "a", " ", "gaussian", " ", "beam"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Intensity", "[", 
     RowBox[{"x_", ",", "y_", ",", " ", "z_"}], "]"}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["I", "0"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], " ", 
         SubscriptBox["w", "0"]}], 
        RowBox[{"w", "[", "z", "]"}]], ")"}], "2"], "  ", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", " ", 
          SuperscriptBox["y", "2"]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"w", "[", "z", "]"}], "2"]], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Intensity", "[", 
    RowBox[{"x_", ",", "y_", ",", " ", "z_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Intensity", "[", 
     RowBox[{"y", ",", "z", ",", "x"}], "]"}], " ", "+", " ", 
    RowBox[{"Intensity", "[", 
     RowBox[{"x", ",", "z", ",", "y"}], "]"}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GradIntensity", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"Intensity", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<the Grad(I(20.0*10^(-6),20.0*10^(-6),2.0*10^(-6))) = \>\"", ",", " ", 
    
    RowBox[{"GradIntensity", " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "->", 
        RowBox[{
         RowBox[{"-", "1.0"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "4"}], ")"}]}]}]}], ",", 
       RowBox[{"y", "->", 
        RowBox[{
         RowBox[{"-", "1.0"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "4"}], ")"}]}]}]}], ",", 
       RowBox[{"z", "->", 
        RowBox[{"12.0", "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "4"}], ")"}]}]}]}]}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Calculating", "  ", "the", "  ", "Polerizability"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]", " ", "=", " ", 
   RowBox[{"32", "*", 
    SuperscriptBox["10", "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", " ", "=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]", " ", 
       SuperscriptBox["c", "3"], "permittivity"}], 
      SuperscriptBox[
       SubscriptBox["\[Omega]", "0"], "3"]], 
     RowBox[{"(", " ", 
      RowBox[{
       FractionBox["\[CapitalGamma]", 
        RowBox[{
         SubscriptBox["\[Omega]", "0"], "-", "\[Omega]"}]], " ", "+", 
       FractionBox["\[CapitalGamma]", 
        RowBox[{
         SubscriptBox["\[Omega]", "0"], "+", "\[Omega]"}]]}], ")"}]}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Potential", " ", "energy", " ", "function", " ", "for", " ", "a", " ", 
    "harmonic", " ", "trap"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{"x_", ",", " ", "y_", ",", " ", "z_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"2", "permittivity", " ", "c", " "}]], ")"}], "\[Alpha]", "  ", 
     RowBox[{"Intensity", "[", 
      RowBox[{"x", ",", "y", ",", " ", "z"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Calculating", " ", "trap", " ", "freq"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    RowBox[{"U", " "}], "^"], "=", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"U", "[", 
     RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r", " ", "=", " ", 
   RowBox[{"Sqrt", " ", "[", 
    RowBox[{"4", " ", 
     RowBox[{
      OverscriptBox[
       RowBox[{"U", " "}], "^"], "/", 
      RowBox[{"(", 
       RowBox[{"m", " ", 
        SuperscriptBox[
         SubscriptBox["w", "0"], "2"]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]z", " ", "=", " ", 
    RowBox[{"Sqrt", " ", "[", 
     RowBox[{"2", " ", 
      RowBox[{
       OverscriptBox[
        RowBox[{"U", " "}], "^"], "/", 
       RowBox[{"(", " ", 
        RowBox[{"m", "  ", 
         SuperscriptBox[
          RowBox[{"(", "zR", ")"}], 
          RowBox[{"2", " "}]]}], ")"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", " ", "[", 
     RowBox[{"\"\<\[Omega]r = \>\"", ",", "  ", "\[Omega]r"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Print", " ", "[", 
     RowBox[{"\"\<\[Omega]z = \>\"", ",", "  ", "\[Omega]z"}], "]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<The ratio \!\(\*FractionBox[SuperscriptBox[\(\[Omega]r\), \(2\)], \
SuperscriptBox[\(\[Omega]z\), \(2\)]]\) = \>\"", ",", 
     FractionBox[
      SuperscriptBox["\[Omega]r", "2"], 
      RowBox[{
       SuperscriptBox["\[Omega]z", "2"], " "}]]}], " ", "]"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculating", " ", "force", " ", "as", " ", "a", " ", "function", " ", 
    "of", " ", "posistion"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Force", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", "=", " ", 
   RowBox[{"-", 
    RowBox[{"Grad", "[", 
     RowBox[{
      RowBox[{"U", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Force", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "4"}], ")"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"-", "1"}], "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "4"}], ")"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"-", "2"}], "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "4"}], ")"}]}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.851939305736868*^9, 3.8519393228082848`*^9}, {
   3.8519393546662407`*^9, 3.8519396836263447`*^9}, {3.851939744307817*^9, 
   3.851939749506002*^9}, {3.851939797796846*^9, 3.851939887334495*^9}, {
   3.851939920044416*^9, 3.8519399388669653`*^9}, {3.851939977847164*^9, 
   3.851940089916051*^9}, {3.851940153470656*^9, 3.851940193039184*^9}, {
   3.8519402997877007`*^9, 3.851940315377851*^9}, {3.8519403818098783`*^9, 
   3.8519403950773706`*^9}, {3.851940501437312*^9, 3.851940522120386*^9}, {
   3.851940570102281*^9, 3.851940947265934*^9}, {3.851949956207326*^9, 
   3.8519500385350437`*^9}, {3.851950094857922*^9, 3.851950253651085*^9}, {
   3.8519502850318947`*^9, 3.851950303458276*^9}, {3.8520308275429163`*^9, 
   3.8520309344280453`*^9}, {3.852030973847783*^9, 3.8520309797752*^9}, {
   3.852031050986897*^9, 3.852031137535635*^9}, {3.852129421092053*^9, 
   3.8521294454660997`*^9}, {3.855304838436048*^9, 3.855304882453289*^9}, {
   3.855305311590086*^9, 3.855305311751072*^9}, {3.855305799363577*^9, 
   3.855305822228649*^9}, {3.85530601743509*^9, 3.8553061648036737`*^9}, {
   3.8553061974647083`*^9, 3.855306354500001*^9}, {3.8553063855980167`*^9, 
   3.8553064730035563`*^9}, {3.855306526664415*^9, 3.855306588053844*^9}, {
   3.8553066254185457`*^9, 3.855306677080564*^9}, {3.855306708022849*^9, 
   3.855306745764573*^9}, {3.855306786844277*^9, 3.855306873177063*^9}, {
   3.855306986556694*^9, 3.855307007000539*^9}, {3.855307066087092*^9, 
   3.855307367181406*^9}, {3.855307615423012*^9, 3.85530762193568*^9}, {
   3.855307716987732*^9, 3.855307728797779*^9}, {3.8553077753927317`*^9, 
   3.85530793686388*^9}, {3.855307988801306*^9, 3.855308000976762*^9}, {
   3.855308125591784*^9, 3.855308157987845*^9}, 3.8553082868543158`*^9, {
   3.855308373533553*^9, 3.85530850734048*^9}, {3.855308584642662*^9, 
   3.855308621179228*^9}, {3.855308728476853*^9, 3.855308740753202*^9}, {
   3.8553091204994507`*^9, 3.855309157601211*^9}, {3.855309231483679*^9, 
   3.8553092496295977`*^9}, {3.870605003784007*^9, 3.870605099837585*^9}, {
   3.870605135335579*^9, 3.870605250490343*^9}, {3.870606955595875*^9, 
   3.8706073462717743`*^9}, {3.870607379046556*^9, 3.870607531948703*^9}, {
   3.870607581449203*^9, 3.870607714996276*^9}, {3.870607746933885*^9, 
   3.870608042096233*^9}, {3.870676276278167*^9, 3.870676281669813*^9}, {
   3.870676401326784*^9, 3.870676464732115*^9}, {3.870676529778439*^9, 
   3.870676553321677*^9}, {3.870676598170891*^9, 3.870676646441164*^9}, {
   3.87067668772861*^9, 3.8706768990641403`*^9}, {3.870676933475132*^9, 
   3.8706769688461533`*^9}, {3.870677123882943*^9, 3.870677138704832*^9}, 
   3.870677201575367*^9, {3.8706784176065493`*^9, 3.870678425313199*^9}, {
   3.870678663287918*^9, 3.870678695621129*^9}, {3.870678928087263*^9, 
   3.870678946059742*^9}, {3.87067914468913*^9, 3.870679210168791*^9}, 
   3.8706792423181353`*^9, {3.870679408585376*^9, 3.870679411978262*^9}, {
   3.8706794968574533`*^9, 3.8706794987604513`*^9}, {3.870750776325264*^9, 
   3.87075081728557*^9}, {3.87075831822816*^9, 3.870758324171287*^9}, {
   3.870758366460483*^9, 3.870758373087161*^9}, {3.870761381860907*^9, 
   3.8707613871241903`*^9}, 3.8707614196475143`*^9, 3.8707614562222137`*^9, {
   3.870763517738838*^9, 3.870763530633469*^9}, {3.870857051501297*^9, 
   3.870857131446919*^9}, {3.870857169441696*^9, 3.870857179106676*^9}, {
   3.870857317913184*^9, 3.870857338648739*^9}, {3.870857431825551*^9, 
   3.870857449565836*^9}, {3.870857493429248*^9, 3.870857615295601*^9}, {
   3.8708576928523197`*^9, 3.870857829225806*^9}, {3.870858078874918*^9, 
   3.870858092184021*^9}, {3.8708582495789747`*^9, 3.870858271629608*^9}, {
   3.870858319407658*^9, 3.8708583740077*^9}, {3.870858602333186*^9, 
   3.870858639615672*^9}, {3.870859925260648*^9, 3.870859952038753*^9}, {
   3.870860007631897*^9, 3.8708600188836412`*^9}, 3.870860050661228*^9, {
   3.870860336657024*^9, 3.8708603578320503`*^9}, {3.870861320513092*^9, 
   3.87086134848424*^9}, {3.871108883791388*^9, 3.8711090146001987`*^9}, {
   3.871109104026565*^9, 3.871109169092375*^9}, {3.871109217188942*^9, 
   3.8711092880751534`*^9}, {3.871109353860214*^9, 3.871109383203018*^9}, {
   3.871109474072999*^9, 3.871109514673725*^9}, {3.87110977922359*^9, 
   3.871109786918112*^9}, {3.871120386062258*^9, 3.871120417024959*^9}, {
   3.871120515951612*^9, 3.871120571866023*^9}, 3.871120602290996*^9, {
   3.8711206342277803`*^9, 3.8711206430500937`*^9}, {3.871120706449299*^9, 
   3.871120746125185*^9}, {3.871120994526173*^9, 3.871121063659663*^9}, {
   3.871121097471246*^9, 3.871121117129632*^9}, 3.8711225424252987`*^9, {
   3.871123987956029*^9, 3.871124000699194*^9}, 3.871124031869808*^9, {
   3.871191265197124*^9, 3.871191284373867*^9}, {3.8711913264556227`*^9, 
   3.871191328073061*^9}, {3.8711914004086018`*^9, 3.871191423149108*^9}, {
   3.871191495752347*^9, 3.8711915291588907`*^9}, {3.871191897309297*^9, 
   3.8711919263180656`*^9}, {3.871200443940682*^9, 3.87120050102993*^9}, {
   3.8712005640232277`*^9, 3.87120059273365*^9}, {3.871200798774885*^9, 
   3.871200802053763*^9}, {3.871200858100273*^9, 3.871200859922476*^9}, {
   3.871200950558536*^9, 3.871200951641449*^9}, {3.871201024015712*^9, 
   3.871201105777912*^9}, {3.87120130797731*^9, 3.8712013617074623`*^9}, {
   3.871201722794402*^9, 3.871201745234152*^9}, {3.871350006437764*^9, 
   3.8713500797237663`*^9}, {3.871350173358796*^9, 3.871350177091873*^9}, {
   3.871355900506177*^9, 3.871355908359503*^9}, {3.87135594814229*^9, 
   3.871355970368464*^9}, {3.8713795156216927`*^9, 3.871379530835944*^9}, {
   3.871383818704702*^9, 3.871383985369697*^9}, {3.871384071444331*^9, 
   3.8713842491144533`*^9}, 3.871384562552697*^9, {3.871384680936223*^9, 
   3.871384681381659*^9}, {3.8713847520727873`*^9, 3.871384815590124*^9}, {
   3.871384915176794*^9, 3.8713849899114943`*^9}, {3.871447790458498*^9, 
   3.8714478648196583`*^9}, {3.871450454478169*^9, 3.871450468438871*^9}, {
   3.871453605042289*^9, 3.871453713333536*^9}, {3.871453922869006*^9, 
   3.871453988715576*^9}, {3.871454065406006*^9, 3.871454065673081*^9}, {
   3.871454096789742*^9, 3.8714541328951178`*^9}, {3.8714541632305813`*^9, 
   3.871454182955195*^9}, 3.871454239650978*^9, 3.871482049638709*^9, {
   3.871484130916977*^9, 3.871484131627293*^9}, {3.871484238163722*^9, 
   3.871484239685639*^9}, {3.871486618244103*^9, 3.871486625377903*^9}, {
   3.871488814455999*^9, 3.871488823913884*^9}, {3.871489312682824*^9, 
   3.871489323023614*^9}, {3.871489909131322*^9, 3.871489951079463*^9}, {
   3.871490018932786*^9, 3.871490325193902*^9}, {3.8715375652411623`*^9, 
   3.8715376039047327`*^9}, {3.871537665703158*^9, 3.871537721529644*^9}, {
   3.8715379326311398`*^9, 3.8715379822028303`*^9}, {3.871538031169654*^9, 
   3.871538041373645*^9}, 3.87153810149611*^9, {3.87155195214076*^9, 
   3.871551979201784*^9}, {3.871553807513886*^9, 3.871553824092504*^9}, {
   3.8715542616099033`*^9, 3.871554269290524*^9}, {3.871555221053179*^9, 
   3.871555224993916*^9}, {3.871555516160633*^9, 3.871555572470315*^9}, {
   3.871563146314715*^9, 3.871563176531857*^9}, {3.871563401695198*^9, 
   3.87156341282029*^9}, {3.871563471380772*^9, 3.871563509068028*^9}, {
   3.871563741776329*^9, 3.8715637712632523`*^9}, {3.8715640841362543`*^9, 
   3.871564091635922*^9}, {3.871564732902582*^9, 3.8715647341650677`*^9}, {
   3.871564898626072*^9, 3.8715649142649612`*^9}, 3.8716119497638187`*^9, 
   3.871611985254198*^9, {3.871613374165882*^9, 3.871613374523938*^9}, {
   3.8716137749040403`*^9, 3.871613827734932*^9}, {3.8716139475939693`*^9, 
   3.8716140209993963`*^9}, {3.871614053605035*^9, 3.8716140857894*^9}, {
   3.8716143328697653`*^9, 3.871614334039433*^9}, {3.871614378442163*^9, 
   3.871614552243464*^9}, {3.871614661447812*^9, 3.871614664583799*^9}, {
   3.871614745220512*^9, 3.8716147457206907`*^9}, {3.8716148371404552`*^9, 
   3.8716150084686413`*^9}, {3.87161848639222*^9, 3.871618554119611*^9}, {
   3.871623563918229*^9, 3.871623637998782*^9}, {3.871623816475582*^9, 
   3.871623818551108*^9}, {3.871712857514505*^9, 3.8717129464274683`*^9}, {
   3.8717506031666613`*^9, 3.871750633553091*^9}, 3.871917644938699*^9, {
   3.871967875959042*^9, 3.8719679088966722`*^9}, {3.8719679963120127`*^9, 
   3.8719679968452272`*^9}, 3.871968303755847*^9, {3.871968681375702*^9, 
   3.871968692144327*^9}, {3.871969003088558*^9, 3.871969077648048*^9}, {
   3.871969164306213*^9, 3.8719691905182*^9}, 3.871969334074512*^9, {
   3.8719702439529457`*^9, 3.871970246473997*^9}, {3.8719706424608107`*^9, 
   3.871970648952485*^9}, {3.871970727794796*^9, 3.871970762244494*^9}, {
   3.871971338624699*^9, 3.871971361310748*^9}, {3.8719728235569077`*^9, 
   3.871972863906467*^9}, {3.871973346538722*^9, 3.871973355091322*^9}, {
   3.871973477808092*^9, 3.8719735023065042`*^9}, {3.8719857056002617`*^9, 
   3.871985709389378*^9}, {3.8719857772062902`*^9, 3.871985860174526*^9}, {
   3.871987491885181*^9, 3.871987494076026*^9}, {3.871987924618359*^9, 
   3.8719879350222397`*^9}, {3.872048931866703*^9, 3.87204898074575*^9}, {
   3.8720491317399693`*^9, 3.872049183788231*^9}, {3.872053138283684*^9, 
   3.872053143207727*^9}, {3.8720533565523252`*^9, 3.872053359337562*^9}, {
   3.872054190770685*^9, 3.872054225933812*^9}, {3.872054683213838*^9, 
   3.872054831903124*^9}, {3.872054864904958*^9, 3.872054902701231*^9}, {
   3.872055301190516*^9, 3.872055305504291*^9}, {3.872055345731154*^9, 
   3.8720553920776243`*^9}, {3.872055443169147*^9, 3.872055472183207*^9}, {
   3.8720559592285433`*^9, 3.872056006571596*^9}, {3.872061923339176*^9, 
   3.872061955388606*^9}, 3.872062284640675*^9, {3.872062497671607*^9, 
   3.8720624987702293`*^9}, {3.872062584478462*^9, 3.872062592072201*^9}, {
   3.872062651591778*^9, 3.872062726924646*^9}, {3.872067802187603*^9, 
   3.872067817072956*^9}, {3.872067978817369*^9, 3.87206798815889*^9}, {
   3.872068021996605*^9, 3.872068025152363*^9}, {3.872068195136218*^9, 
   3.872068207155716*^9}, {3.872068239070016*^9, 3.8720682392972803`*^9}, {
   3.872068527595477*^9, 3.8720685964783077`*^9}, 3.872069251774074*^9, {
   3.872069937846271*^9, 3.8720700243854933`*^9}, {3.872070057163829*^9, 
   3.8720700811888657`*^9}, {3.8720701604332113`*^9, 3.872070173725894*^9}, {
   3.8720702219956207`*^9, 3.872070259549967*^9}, {3.872070298098295*^9, 
   3.87207035434503*^9}, {3.8720704075830812`*^9, 3.8720704239629993`*^9}, 
   3.8720705223406687`*^9, {3.872070935331274*^9, 3.872071008361349*^9}, {
   3.872071142025897*^9, 
   3.872071142123394*^9}},ExpressionUUID->"df3a22f9-ac09-44cb-80c8-\
d774e849fc0a"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   StyleBox["\<\"0.01062944883\"\>",
    ShowStringCharacters->False],
   0.010629448827935385`,
   AutoDelete->True],
  NumberForm[#, 10]& ]], "Output",
 CellChangeTimes->{
  3.872055393273724*^9, {3.872055460188655*^9, 3.872055472832761*^9}, {
   3.872055961620721*^9, 3.8720560083551598`*^9}, {3.872059579855434*^9, 
   3.872059587458766*^9}, 3.8720600310473547`*^9, {3.8720619293423567`*^9, 
   3.872061956299316*^9}, 3.872062288703301*^9, 3.8720625984338093`*^9, 
   3.872062688326206*^9, 3.872062720536113*^9, 3.8720678124120407`*^9, 
   3.872067989246415*^9, 3.8720680263385077`*^9, 3.872068207763413*^9, 
   3.872068528929744*^9, 3.8720685652481737`*^9, 3.8720685969678392`*^9, 
   3.872069252936328*^9, {3.8720699753943443`*^9, 3.872070025290021*^9}, 
   3.872070070851748*^9, 3.872070355230592*^9, 3.872070522879525*^9, 
   3.872070941294606*^9, {3.872070973293256*^9, 3.872071009820599*^9}},
 CellLabel->
  "Out[572]//NumberForm=",ExpressionUUID->"051f6716-cd2a-49c6-8e04-\
41c43b5467b6"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"1.7683882565766165`*^9", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"5.555555555555557`*^8", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["y", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}]}], 
       RowBox[{"1", "+", 
        FractionBox[
         SuperscriptBox["x", "2"], 
         SuperscriptBox[
          TagBox[
           InterpretationBox[
            StyleBox["\<\"0.01062944883\"\>",
             ShowStringCharacters->False],
            0.010629448827935385`,
            AutoDelete->True],
           NumberForm[#, 10]& ], "2"]]}]]}]]}], 
   RowBox[{"1", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], 
     SuperscriptBox[
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.01062944883\"\>",
         ShowStringCharacters->False],
        0.010629448827935385`,
        AutoDelete->True],
       NumberForm[#, 10]& ], "2"]]}]], "+", 
  FractionBox[
   RowBox[{"1.7683882565766165`*^9", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"5.555555555555557`*^8", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}]}], 
       RowBox[{"1", "+", 
        FractionBox[
         SuperscriptBox["y", "2"], 
         SuperscriptBox[
          TagBox[
           InterpretationBox[
            StyleBox["\<\"0.01062944883\"\>",
             ShowStringCharacters->False],
            0.010629448827935385`,
            AutoDelete->True],
           NumberForm[#, 10]& ], "2"]]}]]}]]}], 
   RowBox[{"1", "+", 
    FractionBox[
     SuperscriptBox["y", "2"], 
     SuperscriptBox[
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.01062944883\"\>",
         ShowStringCharacters->False],
        0.010629448827935385`,
        AutoDelete->True],
       NumberForm[#, 10]& ], "2"]]}]]}]], "Output",
 CellChangeTimes->{
  3.872055393273724*^9, {3.872055460188655*^9, 3.872055472832761*^9}, {
   3.872055961620721*^9, 3.8720560083551598`*^9}, {3.872059579855434*^9, 
   3.872059587458766*^9}, 3.8720600310473547`*^9, {3.8720619293423567`*^9, 
   3.872061956299316*^9}, 3.872062288703301*^9, 3.8720625984338093`*^9, 
   3.872062688326206*^9, 3.872062720536113*^9, 3.8720678124120407`*^9, 
   3.872067989246415*^9, 3.8720680263385077`*^9, 3.872068207763413*^9, 
   3.872068528929744*^9, 3.8720685652481737`*^9, 3.8720685969678392`*^9, 
   3.872069252936328*^9, {3.8720699753943443`*^9, 3.872070025290021*^9}, 
   3.872070070851748*^9, 3.872070355230592*^9, 3.872070522879525*^9, 
   3.872070941294606*^9, {3.872070973293256*^9, 3.872071009830947*^9}},
 CellLabel->
  "Out[576]=",ExpressionUUID->"c03d4951-58d5-43b1-b3b9-0365ae4e6b8d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"the Grad(I(20.0*10^(-6),20.0*10^(-6),2.0*10^(-6))) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"1.9648758406406856`*^14", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["805.5555555555558`", 
           RowBox[{"1", "+", 
            FractionBox["1.`*^-8", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]]}]]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["1.`*^-8", 
           SuperscriptBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"0.01062944883\"\>",
               ShowStringCharacters->False],
              0.010629448827935385`,
              AutoDelete->True],
             NumberForm[#, 10]& ], "2"]]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{"2.8490699689289945`*^8", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["805.5555555555558`", 
           RowBox[{"1", "+", 
            FractionBox["1.`*^-8", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]]}]]}]]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1.`*^-8", 
            SuperscriptBox[
             TagBox[
              InterpretationBox[
               StyleBox["\<\"0.01062944883\"\>",
                ShowStringCharacters->False],
               0.010629448827935385`,
               AutoDelete->True],
              NumberForm[#, 10]& ], "2"]]}], ")"}], "3"], " ", 
        SuperscriptBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.01062944883\"\>",
            ShowStringCharacters->False],
           0.010629448827935385`,
           AutoDelete->True],
          NumberForm[#, 10]& ], "2"]}]], "+", 
      FractionBox[
       RowBox[{"353677.6513153233`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["805.5555555555558`", 
           RowBox[{"1", "+", 
            FractionBox["1.`*^-8", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]]}]]}]]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1.`*^-8", 
            SuperscriptBox[
             TagBox[
              InterpretationBox[
               StyleBox["\<\"0.01062944883\"\>",
                ShowStringCharacters->False],
               0.010629448827935385`,
               AutoDelete->True],
              NumberForm[#, 10]& ], "2"]]}], ")"}], "2"], " ", 
        SuperscriptBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.01062944883\"\>",
            ShowStringCharacters->False],
           0.010629448827935385`,
           AutoDelete->True],
          NumberForm[#, 10]& ], "2"]}]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"1.9648758406406856`*^14", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["805.5555555555558`", 
           RowBox[{"1", "+", 
            FractionBox["1.`*^-8", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]]}]]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["1.`*^-8", 
           SuperscriptBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"0.01062944883\"\>",
               ShowStringCharacters->False],
              0.010629448827935385`,
              AutoDelete->True],
             NumberForm[#, 10]& ], "2"]]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{"2.8490699689289945`*^8", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["805.5555555555558`", 
           RowBox[{"1", "+", 
            FractionBox["1.`*^-8", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]]}]]}]]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1.`*^-8", 
            SuperscriptBox[
             TagBox[
              InterpretationBox[
               StyleBox["\<\"0.01062944883\"\>",
                ShowStringCharacters->False],
               0.010629448827935385`,
               AutoDelete->True],
              NumberForm[#, 10]& ], "2"]]}], ")"}], "3"], " ", 
        SuperscriptBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.01062944883\"\>",
            ShowStringCharacters->False],
           0.010629448827935385`,
           AutoDelete->True],
          NumberForm[#, 10]& ], "2"]}]], "+", 
      FractionBox[
       RowBox[{"353677.6513153233`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["805.5555555555558`", 
           RowBox[{"1", "+", 
            FractionBox["1.`*^-8", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]]}]]}]]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1.`*^-8", 
            SuperscriptBox[
             TagBox[
              InterpretationBox[
               StyleBox["\<\"0.01062944883\"\>",
                ShowStringCharacters->False],
               0.010629448827935385`,
               AutoDelete->True],
              NumberForm[#, 10]& ], "2"]]}], ")"}], "2"], " ", 
        SuperscriptBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.01062944883\"\>",
            ShowStringCharacters->False],
           0.010629448827935385`,
           AutoDelete->True],
          NumberForm[#, 10]& ], "2"]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4.715702017537646`*^15", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["805.5555555555558`", 
           RowBox[{"1", "+", 
            FractionBox["1.`*^-8", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]]}]]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["1.`*^-8", 
           SuperscriptBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"0.01062944883\"\>",
               ShowStringCharacters->False],
              0.010629448827935385`,
              AutoDelete->True],
             NumberForm[#, 10]& ], "2"]]}], ")"}], "2"]]}]}], "}"}]}],
  SequenceForm[
  "the Grad(I(20.0*10^(-6),20.0*10^(-6),2.0*10^(-6))) = ", {
   1.9648758406406856`*^14 
     E^((-805.5555555555558)/(1 + 
       1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))) (1 + 
       1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))^(-2) - 
    2.8490699689289945`*^8 
    E^((-805.5555555555558)/(1 + 
      1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))) (1 + 
      1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))^(-3) 
    NumberForm[0.010629448827935385`, 10]^(-2) + 
    353677.6513153233 
     E^((-805.5555555555558)/(1 + 
       1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))) (1 + 
       1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))^(-2) 
     NumberForm[0.010629448827935385`, 10]^(-2), 
    1.9648758406406856`*^14 
     E^((-805.5555555555558)/(1 + 
       1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))) (1 + 
       1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))^(-2) - 
    2.8490699689289945`*^8 
    E^((-805.5555555555558)/(1 + 
      1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))) (1 + 
      1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))^(-3) 
    NumberForm[0.010629448827935385`, 10]^(-2) + 
    353677.6513153233 
     E^((-805.5555555555558)/(1 + 
       1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))) (1 + 
       1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))^(-2) 
     NumberForm[0.010629448827935385`, 10]^(-2), (-4.715702017537646*^15) 
    E^((-805.5555555555558)/(1 + 
      1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))) (1 + 
      1.*^-8 NumberForm[0.010629448827935385`, 10]^(-2))^(-2)}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.872070011023829*^9, 3.872070025300281*^9}, 
   3.872070070862186*^9, 3.872070355251206*^9, 3.872070522941394*^9, 
   3.872070941316408*^9, {3.872070973314979*^9, 3.872071009842054*^9}},
 CellLabel->
  "During evaluation of \
In[564]:=",ExpressionUUID->"71660fdc-e5a1-42f9-8e29-2602223245d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.8658619207340092`*^-34", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"1.9648758406406856`*^14", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["27.777777777777782`", 
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"100000000", " ", 
              SuperscriptBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01062944883\"\>",
                  ShowStringCharacters->False],
                 0.010629448827935385`,
                 AutoDelete->True],
                NumberForm[#, 10]& ], "2"]}]]}]]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["1", 
           RowBox[{"100000000", " ", 
            SuperscriptBox[
             TagBox[
              InterpretationBox[
               StyleBox["\<\"0.01062944883\"\>",
                ShowStringCharacters->False],
               0.010629448827935385`,
               AutoDelete->True],
              NumberForm[#, 10]& ], "2"]}]]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{"9.824379203203429`*^6", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["27.777777777777782`", 
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"100000000", " ", 
              SuperscriptBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01062944883\"\>",
                  ShowStringCharacters->False],
                 0.010629448827935385`,
                 AutoDelete->True],
                NumberForm[#, 10]& ], "2"]}]]}]]}]]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1", 
            RowBox[{"100000000", " ", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]}]]}], ")"}], "3"], " ", 
        SuperscriptBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.01062944883\"\>",
            ShowStringCharacters->False],
           0.010629448827935385`,
           AutoDelete->True],
          NumberForm[#, 10]& ], "2"]}]], "+", 
      FractionBox[
       RowBox[{"353677.6513153233`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["27.777777777777782`", 
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"100000000", " ", 
              SuperscriptBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01062944883\"\>",
                  ShowStringCharacters->False],
                 0.010629448827935385`,
                 AutoDelete->True],
                NumberForm[#, 10]& ], "2"]}]]}]]}]]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1", 
            RowBox[{"100000000", " ", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]}]]}], ")"}], "2"], " ", 
        SuperscriptBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.01062944883\"\>",
            ShowStringCharacters->False],
           0.010629448827935385`,
           AutoDelete->True],
          NumberForm[#, 10]& ], "2"]}]]}], ")"}]}], ",", 
   RowBox[{"1.8658619207340092`*^-34", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"1.9648758406406856`*^14", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["27.777777777777782`", 
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"100000000", " ", 
              SuperscriptBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01062944883\"\>",
                  ShowStringCharacters->False],
                 0.010629448827935385`,
                 AutoDelete->True],
                NumberForm[#, 10]& ], "2"]}]]}]]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["1", 
           RowBox[{"100000000", " ", 
            SuperscriptBox[
             TagBox[
              InterpretationBox[
               StyleBox["\<\"0.01062944883\"\>",
                ShowStringCharacters->False],
               0.010629448827935385`,
               AutoDelete->True],
              NumberForm[#, 10]& ], "2"]}]]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{"9.824379203203429`*^6", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["27.777777777777782`", 
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"100000000", " ", 
              SuperscriptBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01062944883\"\>",
                  ShowStringCharacters->False],
                 0.010629448827935385`,
                 AutoDelete->True],
                NumberForm[#, 10]& ], "2"]}]]}]]}]]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1", 
            RowBox[{"100000000", " ", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]}]]}], ")"}], "3"], " ", 
        SuperscriptBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.01062944883\"\>",
            ShowStringCharacters->False],
           0.010629448827935385`,
           AutoDelete->True],
          NumberForm[#, 10]& ], "2"]}]], "+", 
      FractionBox[
       RowBox[{"353677.6513153233`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["27.777777777777782`", 
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"100000000", " ", 
              SuperscriptBox[
               TagBox[
                InterpretationBox[
                 StyleBox["\<\"0.01062944883\"\>",
                  ShowStringCharacters->False],
                 0.010629448827935385`,
                 AutoDelete->True],
                NumberForm[#, 10]& ], "2"]}]]}]]}]]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["1", 
            RowBox[{"100000000", " ", 
             SuperscriptBox[
              TagBox[
               InterpretationBox[
                StyleBox["\<\"0.01062944883\"\>",
                 ShowStringCharacters->False],
                0.010629448827935385`,
                AutoDelete->True],
               NumberForm[#, 10]& ], "2"]}]]}], ")"}], "2"], " ", 
        SuperscriptBox[
         TagBox[
          InterpretationBox[
           StyleBox["\<\"0.01062944883\"\>",
            ShowStringCharacters->False],
           0.010629448827935385`,
           AutoDelete->True],
          NumberForm[#, 10]& ], "2"]}]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{"1.4664748040086723`*^-19", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox["27.777777777777782`", 
        RowBox[{"1", "+", 
         FractionBox["1", 
          RowBox[{"100000000", " ", 
           SuperscriptBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"0.01062944883\"\>",
               ShowStringCharacters->False],
              0.010629448827935385`,
              AutoDelete->True],
             NumberForm[#, 10]& ], "2"]}]]}]]}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox["1", 
        RowBox[{"100000000", " ", 
         SuperscriptBox[
          TagBox[
           InterpretationBox[
            StyleBox["\<\"0.01062944883\"\>",
             ShowStringCharacters->False],
            0.010629448827935385`,
            AutoDelete->True],
           NumberForm[#, 10]& ], "2"]}]]}], ")"}], "2"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.872055393273724*^9, {3.872055460188655*^9, 3.872055472832761*^9}, {
   3.872055961620721*^9, 3.8720560083551598`*^9}, {3.872059579855434*^9, 
   3.872059587458766*^9}, 3.8720600310473547`*^9, {3.8720619293423567`*^9, 
   3.872061956299316*^9}, 3.872062288703301*^9, 3.8720625984338093`*^9, 
   3.872062688326206*^9, 3.872062720536113*^9, 3.8720678124120407`*^9, 
   3.872067989246415*^9, 3.8720680263385077`*^9, 3.872068207763413*^9, 
   3.872068528929744*^9, 3.8720685652481737`*^9, 3.8720685969678392`*^9, 
   3.872069252936328*^9, {3.8720699753943443`*^9, 3.872070025290021*^9}, 
   3.872070070851748*^9, 3.872070355230592*^9, 3.872070522879525*^9, 
   3.872070941294606*^9, {3.872070973293256*^9, 3.872071009852089*^9}},
 CellLabel->
  "Out[586]=",ExpressionUUID->"698c63b3-551b-4f54-958f-851c77c7c147"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, -1601}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[
               OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringJoin[
                  StringDrop[LinterUIDockedCell`Private`previewString, -1], 
                  "\[Ellipsis]"], 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
           StringJoin[
            StringJoin[
             CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook], "*"], 
            CodeInspector`LinterUI`Private`name]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
           StringJoin[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments], "*"]]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          Names[
           StringJoin[
            StringJoin[
             CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook], "*"], 
            CodeInspector`LinterUI`Private`name]]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
           StringJoin[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments], "*"]]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := StringJoin[
          StringJoin[
           StringJoin["CodeInspector`LinterUI`Private`Vars`", "$$"], 
           
           With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]], "$$"], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := StringJoin[
          StringJoin[
           CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]], 
           
           With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]], "$$"], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := StringJoin[
          StringJoin[
           CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook], 
           
           With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]], "$$"], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := StringJoin[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook], 
          CodeInspector`LinterUI`Private`name], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := StringJoin[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell], 
          CodeInspector`LinterUI`Private`name], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := StringJoin[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell], 
          CodeInspector`LinterUI`Private`name], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := StringJoin[
          StringJoin[
           StringJoin[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments], 
            Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]], "$$"], 
          CodeInspector`LinterUI`Private`name], 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d7fdb6a3-7535-4e39-90d8-63dc86187c9c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 22637, 500, 1406, "Input",ExpressionUUID->"df3a22f9-ac09-44cb-80c8-d774e849fc0a"],
Cell[23220, 524, 1043, 21, 45, "Output",ExpressionUUID->"051f6716-cd2a-49c6-8e04-41c43b5467b6"],
Cell[24266, 547, 2836, 78, 101, "Output",ExpressionUUID->"c03d4951-58d5-43b1-b3b9-0365ae4e6b8d"],
Cell[27105, 627, 10101, 273, 177, "Print",ExpressionUUID->"71660fdc-e5a1-42f9-8e29-2602223245d2"],
Cell[37209, 902, 9516, 260, 196, "Output",ExpressionUUID->"698c63b3-551b-4f54-958f-851c77c7c147"]
}, Open  ]]
}
]
*)

